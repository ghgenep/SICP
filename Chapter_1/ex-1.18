
; exercise 1.18

; the function mutiplies a by 2
(define (double a)
  (+ a a))

; the function divides a by 2
(define (halve a)
  (/ a 2))

; the function returns #t if x is even number, else - #f
(define (even? x)
  (if (= (remainder x 2) 1)
      #f
      #t))

; the function returns a result of a * n
(define (mul a n)
  (mul-iter 0 a n))

; the function has an iterative process; do what * function does
; 3 * 6 = (3 * 2) * (6 / 2)
; 6 * 3 = 6 + (6 * 2) * (2 / 2)
; 18
(define (mul-iter a b c)
  (cond ((= c 0) a)
        ((even? c) (mul-iter a (double b) (halve c)))
	(else (mul-iter (+ a b) b (- c 1)))))

