
; exercise 2.9

; constructor of interval objects
(define (make-interval x y)
  (cons x y))
  
; selectors of bounds
(define (lower-bound x)
  (car x))
(define (upper-bound x)
  (cdr x))

; --- take width of interval ---:
(define (width x)
  (/ (+ (lower-bound x) (upper-bound x))
     2))

; [2, 9]      + [-2, 5]    = [0, 14]
; width = 11/2  width = 3/2  width = 7
; 11/2 + 3/2 = 7
; the same for subtracting
; 
; [2, 9]      * [-2, 5]    = [-18, 45]
; width = 11/2  width = 3/2  width = 27/2
; 11/2 * 3/2 = 33/4  is not 27/2
; the same for dividing
; ---

; subtracting of intervals
(define (sub-interval x y)
  (make-interval (- (lower-bound x) (upper-bound y))
                 (- (upper-bound x) (lower-bound y))))

; adding of intervals
(define (add-interval x y)
  (make-interval (+ (lower-bound x) (lower-bound y))
                 (+ (upper-bound x) (upper-bound y))))

; multiplying of intervals
(define (mul-interval x y)
  ((lambda (p1, p2, p3, p4)
     (make-interval (min p1, p2, p3, p4)
                    (max p1, p2, p3, p4)))
   (* (lower-bound x) (lower-bound y))
   (* (lower-bound x) (upper-bound y))
   (* (upper-bound x) (lower-bound y))
   (* (upper-bound x) (upper-bound y))))

; dividing of interals
(define (div-interval x y)
  (mul-interval x
                (make-interval (/ 1 (upper-bound y))
                               (/ 1 (lower-bound y)))))
                               
